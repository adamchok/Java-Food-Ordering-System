package Panel.Vendor;

import JSwingObjects.JTablesAndCombobox;
import Order.Foodcart;
import Order.Order;
import User.Vendor;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author KWAN JUN ER TP066265
 */
public class PendingOrderList extends javax.swing.JPanel implements JTablesAndCombobox {
    private final DefaultTableModel model = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column){
            return false;
        }
    };
    private final DefaultListModel<String> listModel = new DefaultListModel<>();
    private final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    private final String[] pendingOrderColumns = {"Order ID", "Customer ID", "Service Type", "Date","Time", "Order Cost"};

    private Vendor vendor;
    private Order pendingOrder;
    
    public PendingOrderList() {
        initComponents();
        model.setColumnIdentifiers(pendingOrderColumns);
        pendingOrderTable.setModel(model);
        pendingOrderTable.setRowSorter(sorter);
        listFoodItems.setModel(listModel);
    }
    
    public void displayPendingOrders(Vendor vendor) {
        model.setRowCount(0);
        clearOrderDetails();
        pendingOrder = null;
        this.vendor = vendor;
        
        Order orders = new Order(vendor);
        ArrayList<Order> pendingOrderList = orders.getPendingOrderList();
        
        String[] services = vendor.getServices().split(", ");
        for (String service : services) {
            addItemToComboBox(cbxService, service);
        }
        
        if (!pendingOrderList.isEmpty()) {
            for (Order order : pendingOrderList) {
                if (order.getOrderStatus().equals("Pending")) {
                    String[] tableData = {order.getOrderID(), order.getCustomer().getId(), order.getServiceType(),
                        order.getOrderDate(), order.getOrderTime(), String.format("%.2f", order.getFoodCart().getTotalCost())};
                    model.addRow(tableData);
                }
            }
        }
    }
    
    private void displayOrderDetails() {
        if (pendingOrder != null) {
            lblOrderID.setText(pendingOrder.getOrderID());
            lblOrderStatus.setText(pendingOrder.getOrderStatus());
            lblCustomerID.setText(pendingOrder.getCustomer().getId());
            lblServiceType.setText(pendingOrder.getServiceType());
            lblOrderDate.setText(pendingOrder.getOrderDate());
            lblOrderTime.setText(pendingOrder.getOrderTime());
            lblTotalOrderCost.setText("RM "+String.format("%.2f", pendingOrder.getOrderCost()));
            
            Foodcart orderList = pendingOrder.getFoodCart();
            for (int i = 0; i < orderList.getFoodItems().size(); i++) {
                String orderItem = "Item No "+orderList.getFoodItems().get(i).getItemID()
                        +": "+orderList.getFoodItems().get(i).getItemName()+" x"+orderList.getFoodItemCounts().get(i)
                        +" - RM "+String.format("%.2f", orderList.getFoodItems().get(i).getItemPrice() * orderList.getFoodItemCounts().get(i));
                if (!listModel.contains(orderItem)) {
                    listModel.addElement(orderItem);
                }
            }
        }
    }
    
    private void clearOrderDetails() {
        lblOrderID.setText("");
        lblOrderStatus.setText("");
        lblCustomerID.setText("");
        lblServiceType.setText("");
        lblOrderDate.setText("");
        lblOrderTime.setText("");
        lblTotalOrderCost.setText("");
        listModel.clear();
    }
     
    @Override
    public boolean comboboxFilterImplementation(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
        String serviceFilter = (String) cbxService.getSelectedItem();
        String searchFilter = txtSearch.getText();
        
        String serviceItem = entry.getStringValue(2);
        String idItem = entry.getStringValue(0);
        
        boolean service = "All".equals(serviceFilter) || serviceItem.contains(serviceFilter);
        boolean id = searchFilter.isEmpty() || searchFilter.isBlank() || idItem.contains(searchFilter);
                
        return service && id;    
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingOrderTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblOrderID = new javax.swing.JTextField();
        lblOrderStatus = new javax.swing.JTextField();
        lblServiceType = new javax.swing.JTextField();
        lblOrderDate = new javax.swing.JTextField();
        lblOrderTime = new javax.swing.JTextField();
        lblTotalOrderCost = new javax.swing.JTextField();
        lblCustomerID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        scrollFoodItems = new javax.swing.JScrollPane();
        listFoodItems = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxService = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(925, 580));
        setMinimumSize(new java.awt.Dimension(925, 580));
        setPreferredSize(new java.awt.Dimension(925, 580));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Pending Orders");

        pendingOrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pendingOrderTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(pendingOrderTable);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Order ID:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 11, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Order Status:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 43, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Customer ID:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 75, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Service Type:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 107, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Order Date:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 139, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Order Time:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 168, -1, 28));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 351, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Total Order Cost:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 377, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Order List:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 202, -1, -1));

        lblOrderID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOrderID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblOrderID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblOrderID.setEnabled(false);
        jPanel1.add(lblOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 8, 242, -1));

        lblOrderStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOrderStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblOrderStatus.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblOrderStatus.setEnabled(false);
        jPanel1.add(lblOrderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 40, 242, -1));

        lblServiceType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblServiceType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblServiceType.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblServiceType.setEnabled(false);
        jPanel1.add(lblServiceType, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 104, 242, -1));

        lblOrderDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOrderDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblOrderDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblOrderDate.setEnabled(false);
        jPanel1.add(lblOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 136, 242, -1));

        lblOrderTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOrderTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblOrderTime.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblOrderTime.setEnabled(false);
        jPanel1.add(lblOrderTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 169, 242, -1));

        lblTotalOrderCost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotalOrderCost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTotalOrderCost.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblTotalOrderCost.setEnabled(false);
        jPanel1.add(lblTotalOrderCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 403, 193, -1));

        lblCustomerID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCustomerID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblCustomerID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lblCustomerID.setEnabled(false);
        jPanel1.add(lblCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 72, 242, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAccept.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAccept.setText("Accept ");
        btnAccept.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReject.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReject.setText("Reject ");
        btnReject.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnAccept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReject)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 377, -1, -1));

        listFoodItems.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listFoodItems.setEnabled(false);
        scrollFoodItems.setViewportView(listFoodItems);

        jPanel1.add(scrollFoodItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 350, 150));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Search :");

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Service Type:");

        cbxService.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbxService.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cbxService.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxServiceItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxService, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxServiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxServiceItemStateChanged
        applyFilters(sorter);
    }//GEN-LAST:event_cbxServiceItemStateChanged

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        applyFilters(sorter);
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        if (pendingOrder != null) {
            if (pendingOrder.acceptOrder()) {
                JOptionPane.showMessageDialog(this, "Order accepted. You can view the order in 'Accepted Order' tab.");
                displayPendingOrders(vendor);
            } else {
                JOptionPane.showMessageDialog(this, "Unable to accept order. Please try again.");
            }
        }
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        if (pendingOrder != null) {
            if (pendingOrder.rejectOrder()) {
                JOptionPane.showMessageDialog(this, "Order rejected. You can view the rejected order in 'Order History' tab.");
                displayPendingOrders(vendor);
            } else {
                JOptionPane.showMessageDialog(this, "Unable to reject order. Please try again.");
            }            
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void pendingOrderTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingOrderTableMouseReleased
        int row = pendingOrderTable.getSelectedRow();
        if (row >= 0) {
            String orderID = String.valueOf(pendingOrderTable.getValueAt(row, 0));
            pendingOrder = (Order) new Order(orderID).getObject("Pending Order Details");
            displayOrderDetails();
        }
    }//GEN-LAST:event_pendingOrderTableMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox<String> cbxService;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lblCustomerID;
    private javax.swing.JTextField lblOrderDate;
    private javax.swing.JTextField lblOrderID;
    private javax.swing.JTextField lblOrderStatus;
    private javax.swing.JTextField lblOrderTime;
    private javax.swing.JTextField lblServiceType;
    private javax.swing.JTextField lblTotalOrderCost;
    private javax.swing.JList<String> listFoodItems;
    private javax.swing.JTable pendingOrderTable;
    private javax.swing.JScrollPane scrollFoodItems;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
