package Panel.DeliveryRunner;

import Order.DeliveryTask;
import User.DeliveryRunner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NABIL BIN NAZME NAZIM TP072131
 */
public class CurrentTaskPanel extends javax.swing.JPanel {
    private final DefaultTableModel modelTableTask = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column){  
            return false;  
        }
    };
    private final String[] colNames = {"ID", "Status", "Restaurant", "Location", "Delivery Address", "Amount"};
    
    private DeliveryRunner runner;
    private DeliveryTask task;
    
    public CurrentTaskPanel() {
        initComponents();
       
        disableButtons();
        modelTableTask.setColumnIdentifiers(colNames);
        tableTask.setModel(modelTableTask);
    }
    
    public void displayCurrentTask(DeliveryRunner runner){
        this.runner = runner;
        task = null;
        disableButtons();
        txtLocation.setText("");
        txtDeliveryAddress.setText("");
        modelTableTask.setRowCount(0);
        
        task = (DeliveryTask) new DeliveryTask(runner).getObject("Pending Delivery Tasks");
        
        if (task != null) {
            
            if (task.getDeliveryStatus().equals("Pending")) {
                btnAcceptJob.setEnabled(true);
                btnRejectJob.setEnabled(true);
                
            } else if (task.getDeliveryStatus().equals("Ready for Pick-up")) {
                btnDeliveryOrder.setEnabled(true);
            } else if (task.getDeliveryStatus().equals("Delivering")){
                btnCompletedJob.setEnabled(true);
            }
            
            txtLocation.setText(task.getOrder().getVendor().getRestaurantAddress());
            txtDeliveryAddress.setText(task.getOrder().getDeliveryAddress());
            String[] tableInfo = {task.getDeliveryID(), task.getDeliveryStatus(), task.getOrder().getCustomer().getName(), 
                task.getOrder().getVendor().getLocation(), task.getOrder().getDeliveryAddress(),
                String.format("%.2f", task.getDeliveryCost())};
            modelTableTask.addRow(tableInfo);
        }
    }
    
    private void disableButtons() {
        btnAcceptJob.setEnabled(false);
        btnRejectJob.setEnabled(false);
        btnDeliveryOrder.setEnabled(false);
        btnCompletedJob.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDashboard = new javax.swing.JLabel();
        lblTaskLabel = new javax.swing.JLabel();
        scrollTaskTable = new javax.swing.JScrollPane();
        tableTask = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDeliveryAddress = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLocation = new javax.swing.JTextArea();
        lblDeliveryAddress = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        btnCompletedJob = new javax.swing.JButton();
        btnDeliveryOrder = new javax.swing.JButton();
        btnRejectJob = new javax.swing.JButton();
        btnAcceptJob = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(880, 600));
        setMinimumSize(new java.awt.Dimension(880, 600));
        setPreferredSize(new java.awt.Dimension(880, 600));

        lblDashboard.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lblDashboard.setText("Task Dashboard");

        lblTaskLabel.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblTaskLabel.setText("Your Assigned Task Will Appear Here:");

        scrollTaskTable.setPreferredSize(new java.awt.Dimension(453, 403));

        tableTask.setModel(modelTableTask);
        tableTask.setRowHeight(50);
        scrollTaskTable.setViewportView(tableTask);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setMaximumSize(new java.awt.Dimension(880, 136));
        jPanel2.setMinimumSize(new java.awt.Dimension(880, 136));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDeliveryAddress.setEditable(false);
        txtDeliveryAddress.setColumns(20);
        txtDeliveryAddress.setLineWrap(true);
        txtDeliveryAddress.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtDeliveryAddress);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 380, 90));

        txtLocation.setEditable(false);
        txtLocation.setColumns(20);
        txtLocation.setLineWrap(true);
        txtLocation.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtLocation);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 380, 90));

        lblDeliveryAddress.setFont(new java.awt.Font("Dubai Light", 1, 20)); // NOI18N
        lblDeliveryAddress.setText("Delivery Address");
        jPanel2.add(lblDeliveryAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 380, -1));

        lblLocation.setFont(new java.awt.Font("Dubai Light", 1, 20)); // NOI18N
        lblLocation.setText("Location:");
        jPanel2.add(lblLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, -1));

        btnCompletedJob.setText("Completed");
        btnCompletedJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletedJobActionPerformed(evt);
            }
        });

        btnDeliveryOrder.setText("Pick-up Order");
        btnDeliveryOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveryOrderActionPerformed(evt);
            }
        });

        btnRejectJob.setText("Reject");
        btnRejectJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectJobActionPerformed(evt);
            }
        });

        btnAcceptJob.setText("Accept");
        btnAcceptJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAcceptJob, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(btnRejectJob, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(btnDeliveryOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnCompletedJob, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 859, Short.MAX_VALUE)
                        .addComponent(lblTaskLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDashboard, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scrollTaskTable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblDashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaskLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollTaskTable, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAcceptJob, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRejectJob, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeliveryOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompletedJob, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(121, 121, 121))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptJobActionPerformed
        if (task != null) {
            if (task.acceptTask()) {
                JOptionPane.showMessageDialog(this, "Delivery task accepted.");
            } else {
                JOptionPane.showMessageDialog(this, "Unable to accept delivery task. Please try again.");
            }
        }
        displayCurrentTask(runner);
    }//GEN-LAST:event_btnAcceptJobActionPerformed

    private void btnRejectJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectJobActionPerformed
        if (task != null) {
            if (task.rejectTask()) {
                JOptionPane.showMessageDialog(this, "Delivery task rejected.");
            } else {
                JOptionPane.showMessageDialog(this, "Unable to reject delivery task. Please try again.");
            }
        }
        displayCurrentTask(runner);
    }//GEN-LAST:event_btnRejectJobActionPerformed

    private void btnDeliveryOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveryOrderActionPerformed
        if (task != null) {
            if (task.getDeliveryStatus().equals("Ready for Pick-up")) {
                if (task.deliveryOrder()) {
                    JOptionPane.showMessageDialog(this, "Delivery task status updated.");
                } else {
                    JOptionPane.showMessageDialog(this, "Unable to update delivering status. Please try again.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Order is not ready for pick-up yet");
            }
        }
        displayCurrentTask(runner);
    }//GEN-LAST:event_btnDeliveryOrderActionPerformed

    private void btnCompletedJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletedJobActionPerformed
        if (task != null) {
            if (task.completeTask()) {
                JOptionPane.showMessageDialog(this, "Delivery complete. View delivery task in 'Earnings'.");
            } else {
                JOptionPane.showMessageDialog(this, "Unable to complete task. Please try again.");
            }
        }
        displayCurrentTask(runner);
    }//GEN-LAST:event_btnCompletedJobActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptJob;
    private javax.swing.JButton btnCompletedJob;
    private javax.swing.JButton btnDeliveryOrder;
    private javax.swing.JButton btnRejectJob;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDashboard;
    private javax.swing.JLabel lblDeliveryAddress;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblTaskLabel;
    private javax.swing.JScrollPane scrollTaskTable;
    private javax.swing.JTable tableTask;
    private javax.swing.JTextArea txtDeliveryAddress;
    private javax.swing.JTextArea txtLocation;
    // End of variables declaration//GEN-END:variables
}
