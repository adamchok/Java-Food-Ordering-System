package Panel.Customer;

import Order.Foodcart;
import Order.Order;
import User.Customer;
import User.Vendor;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import JSwingObjects.JTablesAndCombobox;
import User.DeliveryAddress;

/**
 *
 * @author CHOK QI YANG TP070091
 */
public class ConfirmOrderPanel extends javax.swing.JPanel implements JTablesAndCombobox{    
    private final DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column){  
            return false;  
        }
    };
    private final String[] orderTableColumns = {"ID", "Item", "Quantity", "Cost"};
    
    private Foodcart foodCart;
    private Customer customer;
    private Vendor vendor;
    
    private ArrayList<String> deliveryAddresses;
    private String serviceType;
    private double currentCredit;
    private double serviceCost;
    
    public ConfirmOrderPanel() {
        initComponents();
        model.setColumnIdentifiers(orderTableColumns);
        orderTable.setModel(model);
        deliveryPanel.setVisible(false);
    }
    
    public void displayOrderDetails(Foodcart foodCart, String serviceType, Vendor vendor, Customer customer) {
        this.foodCart = foodCart;
        this.serviceType = serviceType;
        this.vendor = vendor;
        this.customer = customer;
        deliveryPanel.setVisible(false);
        
        displayOrder();
        displayVendorInfo();
        displayCustomerInfo();
    }
    
    private void displayOrder() {
        model.setRowCount(0);
        
        for (int i = 0; i < foodCart.getFoodItems().size(); i++) {
            String[] tableData = {foodCart.getFoodItems().get(i).getItemID(),
                foodCart.getFoodItems().get(i).getItemName(),
                foodCart.getFoodItemCounts().get(i).toString(),
                String.format("%.2f", foodCart.getFoodItems().get(i).getItemPrice() * foodCart.getFoodItemCounts().get(i))};
            
            model.addRow(tableData);
        }
        
        if (serviceType.equals("Delivery")) {
            serviceCost = 5;
            deliveryPanel.setVisible(true);
        } else {
            serviceCost = 0;
        }
        
        lblService.setText(serviceType);
        lblServicePrice.setText("RM "+String.format("%.2f",serviceCost));
        lblTotalPrice.setText("RM "+String.format("%.2f",foodCart.getTotalCost() + serviceCost));
    }
    
    private void displayVendorInfo() {
        lblVendorName.setText("");
        txtRestaurantAddress.setText("");
        
        lblVendorName.setText(vendor.getName());
        txtRestaurantAddress.setText(vendor.getRestaurantAddress());
        txtRestaurantAddress.setCaretPosition(0);
    }
    
    private void displayCustomerInfo() {
        currentCredit = customer.getCustomerWallet().getCurrentCreditAmount();
        lblCreditAmount.setText("RM "+String.format("%.2f", currentCredit));
        
        if (deliveryPanel.isVisible()) {
            txtDeliveryAddress.setText("");
            cbxSavedDeliveryAddress.removeAllItems();
            
            deliveryAddresses = new ArrayList<>();
            
            DeliveryAddress addresses = new DeliveryAddress(customer);
            ArrayList<DeliveryAddress> deliveryAddressList = addresses.getDeliveryAddressList(false);
            if (!deliveryAddressList.isEmpty()) {
                for (DeliveryAddress address : deliveryAddressList) {
                    addItemToComboBox(cbxSavedDeliveryAddress, address.getTitle());
                    deliveryAddresses.add(address.getAddress());
                }
            }
            
            if (cbxSavedDeliveryAddress.getItemCount() > 0) {
                cbxSavedDeliveryAddress.setSelectedIndex(0);
            }
        }
    }
    
    @Override
    public boolean comboboxFilterImplementation(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollMenuTable = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        orderDetailsPanel = new javax.swing.JPanel();
        lblOrderDetails = new javax.swing.JLabel();
        lblRestaurantAddress = new javax.swing.JLabel();
        scrollRestaurantAddress1 = new javax.swing.JScrollPane();
        txtRestaurantAddress = new javax.swing.JTextArea();
        lblTotalCost = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        lblServiceType = new javax.swing.JLabel();
        lblDeliveryCost = new javax.swing.JLabel();
        lblServicePrice = new javax.swing.JLabel();
        lblService = new javax.swing.JLabel();
        lblRestaurantName = new javax.swing.JLabel();
        lblVendorName = new javax.swing.JLabel();
        deliveryPanel = new javax.swing.JPanel();
        scrollRestaurantAddress2 = new javax.swing.JScrollPane();
        txtDeliveryAddress = new javax.swing.JTextArea();
        cbxSavedDeliveryAddress = new javax.swing.JComboBox<>();
        lblDeliveryAddress = new javax.swing.JLabel();
        btnPlaceOrder = new javax.swing.JButton();
        lblConfirmOrderDelivery = new javax.swing.JLabel();
        creditPanel = new javax.swing.JPanel();
        lblCurrentCredit = new javax.swing.JLabel();
        lblCreditAmount = new javax.swing.JLabel();
        btnEditOrder = new javax.swing.JButton();
        btnTopUp = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(906, 580));
        setMinimumSize(new java.awt.Dimension(906, 580));
        setPreferredSize(new java.awt.Dimension(906, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderTable.setModel(model);
        orderTable.setMaximumSize(new java.awt.Dimension(700, 350));
        orderTable.setMinimumSize(new java.awt.Dimension(700, 350));
        orderTable.setPreferredSize(new java.awt.Dimension(700, 350));
        orderTable.setRowHeight(50);
        scrollMenuTable.setViewportView(orderTable);
        if (orderTable.getColumnModel().getColumnCount() > 0) {
            orderTable.getColumnModel().getColumn(0).setMinWidth(50);
            orderTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            orderTable.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        add(scrollMenuTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 544, 507));

        orderDetailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        orderDetailsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblOrderDetails.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblOrderDetails.setText("Order Details:");

        lblRestaurantAddress.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblRestaurantAddress.setText("Restaurant Address:");

        txtRestaurantAddress.setEditable(false);
        txtRestaurantAddress.setBackground(new java.awt.Color(255, 255, 255));
        txtRestaurantAddress.setColumns(20);
        txtRestaurantAddress.setFont(new java.awt.Font("Dubai Light", 0, 18)); // NOI18N
        txtRestaurantAddress.setLineWrap(true);
        txtRestaurantAddress.setTabSize(4);
        txtRestaurantAddress.setWrapStyleWord(true);
        txtRestaurantAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtRestaurantAddress.setMargin(new java.awt.Insets(0, 0, 0, 0));
        scrollRestaurantAddress1.setViewportView(txtRestaurantAddress);

        lblTotalCost.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblTotalCost.setText("Total Cost:");

        lblTotalPrice.setFont(new java.awt.Font("Dubai Light", 1, 24)); // NOI18N
        lblTotalPrice.setText("RM 0");

        lblServiceType.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblServiceType.setText("Service Type:");

        lblDeliveryCost.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblDeliveryCost.setText("Service Cost:");

        lblServicePrice.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblServicePrice.setText("{Insert Service Cost}");

        lblService.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblService.setText("{Insert Service}");

        lblRestaurantName.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblRestaurantName.setText("Restaurant Name:");

        lblVendorName.setFont(new java.awt.Font("Dubai Light", 1, 16)); // NOI18N
        lblVendorName.setText("{Insert Name}");

        txtDeliveryAddress.setEditable(false);
        txtDeliveryAddress.setBackground(new java.awt.Color(255, 255, 255));
        txtDeliveryAddress.setColumns(20);
        txtDeliveryAddress.setFont(new java.awt.Font("Dubai Light", 0, 18)); // NOI18N
        txtDeliveryAddress.setLineWrap(true);
        txtDeliveryAddress.setTabSize(4);
        txtDeliveryAddress.setWrapStyleWord(true);
        txtDeliveryAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDeliveryAddress.setMargin(new java.awt.Insets(0, 0, 0, 0));
        scrollRestaurantAddress2.setViewportView(txtDeliveryAddress);

        cbxSavedDeliveryAddress.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxSavedDeliveryAddress.setToolTipText("");
        cbxSavedDeliveryAddress.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxSavedDeliveryAddress.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxSavedDeliveryAddress.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxSavedDeliveryAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSavedDeliveryAddressActionPerformed(evt);
            }
        });

        lblDeliveryAddress.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblDeliveryAddress.setText("Delivery Address:");

        javax.swing.GroupLayout deliveryPanelLayout = new javax.swing.GroupLayout(deliveryPanel);
        deliveryPanel.setLayout(deliveryPanelLayout);
        deliveryPanelLayout.setHorizontalGroup(
            deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollRestaurantAddress2, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addGroup(deliveryPanelLayout.createSequentialGroup()
                        .addComponent(lblDeliveryAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSavedDeliveryAddress, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        deliveryPanelLayout.setVerticalGroup(
            deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeliveryAddress)
                    .addComponent(cbxSavedDeliveryAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollRestaurantAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout orderDetailsPanelLayout = new javax.swing.GroupLayout(orderDetailsPanel);
        orderDetailsPanel.setLayout(orderDetailsPanelLayout);
        orderDetailsPanelLayout.setHorizontalGroup(
            orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                        .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblOrderDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(lblRestaurantName)
                                        .addGap(6, 6, 6)
                                        .addComponent(lblVendorName))
                                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(lblRestaurantAddress))))
                            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(deliveryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(lblServiceType)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblService))
                                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(lblDeliveryCost)
                                        .addGap(8, 8, 8)
                                        .addComponent(lblServicePrice))
                                    .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(lblTotalCost)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTotalPrice)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrollRestaurantAddress1)))
                .addContainerGap())
        );
        orderDetailsPanelLayout.setVerticalGroup(
            orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderDetailsPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblOrderDetails)
                .addGap(6, 6, 6)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRestaurantName)
                    .addComponent(lblVendorName))
                .addGap(2, 2, 2)
                .addComponent(lblRestaurantAddress)
                .addGap(4, 4, 4)
                .addComponent(scrollRestaurantAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliveryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblServiceType)
                    .addComponent(lblService))
                .addGap(2, 2, 2)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDeliveryCost)
                    .addComponent(lblServicePrice))
                .addGap(1, 1, 1)
                .addGroup(orderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalCost)
                    .addComponent(lblTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(orderDetailsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, -1, -1));

        lblConfirmOrderDelivery.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lblConfirmOrderDelivery.setText("Confirm Order");
        add(lblConfirmOrderDelivery, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 260, -1));

        lblCurrentCredit.setFont(new java.awt.Font("Dubai Light", 1, 16)); // NOI18N
        lblCurrentCredit.setText("Current Credit:");

        lblCreditAmount.setFont(new java.awt.Font("Dubai Light", 1, 16)); // NOI18N
        lblCreditAmount.setText("RM 0");

        javax.swing.GroupLayout creditPanelLayout = new javax.swing.GroupLayout(creditPanel);
        creditPanel.setLayout(creditPanelLayout);
        creditPanelLayout.setHorizontalGroup(
            creditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCurrentCredit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCreditAmount)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        creditPanelLayout.setVerticalGroup(
            creditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creditPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(creditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentCredit)
                    .addComponent(lblCreditAmount))
                .addContainerGap())
        );

        add(creditPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 10, 240, -1));

        btnEditOrder.setText("Edit Order");
        btnEditOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditOrderActionPerformed(evt);
            }
        });
        add(btnEditOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 110, 40));

        btnTopUp.setText("Top-up Credit");
        btnTopUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopUpActionPerformed(evt);
            }
        });
        add(btnTopUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 122, 40));
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnEditOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditOrderActionPerformed
        Panel.Customer.MainPanel mainPanel = (Panel.Customer.MainPanel) this.getParent();
        mainPanel.mainPanelLayout.show(mainPanel, "viewMenuPanel");
    }//GEN-LAST:event_btnEditOrderActionPerformed

    private void cbxSavedDeliveryAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSavedDeliveryAddressActionPerformed
        if (!deliveryAddresses.isEmpty() && cbxSavedDeliveryAddress.getSelectedIndex() >= 0) {
            txtDeliveryAddress.setText(deliveryAddresses.get(cbxSavedDeliveryAddress.getSelectedIndex()));
        }
    }//GEN-LAST:event_cbxSavedDeliveryAddressActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        if (customer.getCustomerWallet().getCurrentCreditAmount() >= foodCart.getTotalCost()+serviceCost) {
            Order pendingOrder;
            if (serviceType.equals("Delivery")) {
                pendingOrder = new Order(foodCart, foodCart.getTotalCost() + serviceCost, vendor, txtDeliveryAddress.getText(), serviceType, 
                        customer);
            } else {
                pendingOrder = new Order(foodCart, foodCart.getTotalCost() + serviceCost, vendor, serviceType, customer);
            }
            
            
            if (pendingOrder.placeOrder()) {
                JOptionPane.showMessageDialog(this, "Order placed.");
                Panel.Customer.MainPanel mainPanel = (Panel.Customer.MainPanel) this.getParent();
                if (pendingOrder.getServiceType().equals("Dine-in")) {
                    mainPanel.displayDineInOrder(customer);
                } else {
                    mainPanel.displayCurrentOrder(customer); 
                }
            } else {
                JOptionPane.showMessageDialog(this, "Unable to place order. Please try again.");
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Insuffient balance. Please top-up your credit before placing an order.");
        }
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnTopUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopUpActionPerformed
        Panel.Customer.MainPanel mainPanel = (Panel.Customer.MainPanel) this.getParent();
        mainPanel.displayProfile(customer);
    }//GEN-LAST:event_btnTopUpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditOrder;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnTopUp;
    private javax.swing.JComboBox<String> cbxSavedDeliveryAddress;
    private javax.swing.JPanel creditPanel;
    private javax.swing.JPanel deliveryPanel;
    private javax.swing.JLabel lblConfirmOrderDelivery;
    private javax.swing.JLabel lblCreditAmount;
    private javax.swing.JLabel lblCurrentCredit;
    private javax.swing.JLabel lblDeliveryAddress;
    private javax.swing.JLabel lblDeliveryCost;
    private javax.swing.JLabel lblOrderDetails;
    private javax.swing.JLabel lblRestaurantAddress;
    private javax.swing.JLabel lblRestaurantName;
    private javax.swing.JLabel lblService;
    private javax.swing.JLabel lblServicePrice;
    private javax.swing.JLabel lblServiceType;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JLabel lblVendorName;
    private javax.swing.JPanel orderDetailsPanel;
    private javax.swing.JTable orderTable;
    private javax.swing.JScrollPane scrollMenuTable;
    private javax.swing.JScrollPane scrollRestaurantAddress1;
    private javax.swing.JScrollPane scrollRestaurantAddress2;
    private javax.swing.JTextArea txtDeliveryAddress;
    private javax.swing.JTextArea txtRestaurantAddress;
    // End of variables declaration//GEN-END:variables
}
