    package Panel.Customer;

import Review.VendorReview;
import User.Vendor;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import JSwingObjects.JTablesAndCombobox;
import User.Customer;

/**
 *
 * @author CHOK QI YANG TP070091
 */
public class BrowseVendorPanel extends javax.swing.JPanel implements JTablesAndCombobox{
    private final DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column){  
            return false;  
        }
    };
    private final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    private final String[] vendorTableColumns = {"ID", "Restaurant", "Cuisine", "Services", "Location", "Avg. Rating"};
    
    private Customer customer;
    
    public BrowseVendorPanel() {
        initComponents();
        model.setColumnIdentifiers(vendorTableColumns);
        vendorTable.setModel(model);
        vendorTable.setRowSorter(sorter);
    }

    public void displayRestaurants(Customer customer) {
        this.customer = customer;
        model.setRowCount(0);
        
        Vendor vendors = new Vendor();
        ArrayList<Vendor> vendorList = vendors.getVendorList(false);
        
        for (Vendor vendor : vendorList) {
            VendorReview vendorReview = new VendorReview(vendor);
            
            String[] tableData = {vendor.getId(), vendor.getName(), vendor.getCuisine(), vendor.getServices(), vendor.getLocation(),
                vendorReview.getAverageRating()};
            
            addItemToComboBox(cbxCuisine, vendor.getCuisine());
            addItemToComboBox(cbxLocation, vendor.getLocation());

            model.addRow(tableData);
        }
    }
    
    private void displayVendorReviews (Vendor vendor, String ratingFilter) {
        VendorReview vendorReview = new VendorReview(vendor);
        String reviews = "";
        ArrayList<VendorReview> reviewList = vendorReview.getVendorReviewList();
        
        for (VendorReview review : reviewList) {
            if (ratingFilter.equals("All")) {
                reviews += review.getReviewDate() + " - Rating: " + review.getReviewRating() + "\n" + review.getReviewComments() + 
                        "\n-------------------------------------------------\n";
            } else {
                int rating = Integer.parseInt(ratingFilter);
                if (review.getReviewRating() == rating) {
                    reviews += review.getReviewDate() + " - Rating: " + review.getReviewRating() + "\n" + review.getReviewComments() + 
                        "\n-------------------------------------------------\n";
                }
            }
        }
        lblVendorReviews.setText(reviews);
        lblVendorReviews.setCaretPosition(0);
    }
    
    @Override
    public boolean comboboxFilterImplementation(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
        String cuisineFilter = (String) cbxCuisine.getSelectedItem();   
        String locationFilter = (String) cbxLocation.getSelectedItem();
        String serviceFilter = (String) cbxService.getSelectedItem();
        String restaurantFilter = txtSearch.getText();
        
        String cuisineItem = entry.getStringValue(2);
        String locationItem = entry.getStringValue(4);
        String serviceItem = entry.getStringValue(3);
        String restaurantItem = entry.getStringValue(1);
        
        boolean cuisine = "All".equals(cuisineFilter) || cuisineItem.equals(cuisineFilter);
        boolean location = "All".equals(locationFilter) || locationItem.equals(locationFilter);
        boolean service = "All".equals(serviceFilter) || serviceItem.contains(serviceFilter);
        boolean restaurant = restaurantFilter.isEmpty() || restaurantFilter.isBlank() || restaurantItem.contains(restaurantFilter);
                
        return cuisine && location && service && restaurant;    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        vendorPanel = new javax.swing.JPanel();
        filterPanel = new javax.swing.JPanel();
        lblCuisineFilter = new javax.swing.JLabel();
        cbxCuisine = new javax.swing.JComboBox<>();
        lblLocation = new javax.swing.JLabel();
        cbxLocation = new javax.swing.JComboBox<>();
        lblService = new javax.swing.JLabel();
        cbxService = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        lblReviewRating = new javax.swing.JLabel();
        cbxReviewRating = new javax.swing.JComboBox<>();
        lblWelcomeMsg = new javax.swing.JLabel();
        scrollVendorTable = new javax.swing.JScrollPane();
        vendorTable = new javax.swing.JTable();
        vendorInfoPanel = new javax.swing.JPanel();
        lblVendorName = new javax.swing.JLabel();
        lblReviews = new javax.swing.JLabel();
        scrollVendorReviews = new javax.swing.JScrollPane();
        lblVendorReviews = new javax.swing.JTextArea();
        btnViewStore = new javax.swing.JButton();
        lblVendorLocationLabel = new javax.swing.JLabel();
        lblVendorServicesLabel = new javax.swing.JLabel();
        lblVendorLocation = new javax.swing.JLabel();
        lblVendorServices = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(906, 580));
        setMinimumSize(new java.awt.Dimension(906, 580));
        setPreferredSize(new java.awt.Dimension(906, 580));

        vendorPanel.setBackground(new java.awt.Color(255, 255, 255));
        vendorPanel.setMaximumSize(new java.awt.Dimension(906, 580));
        vendorPanel.setMinimumSize(new java.awt.Dimension(906, 580));
        vendorPanel.setName("vendorPanel"); // NOI18N
        vendorPanel.setPreferredSize(new java.awt.Dimension(906, 580));
        vendorPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        filterPanel.setBackground(new java.awt.Color(255, 255, 255));
        filterPanel.setMaximumSize(new java.awt.Dimension(923, 122));
        filterPanel.setMinimumSize(new java.awt.Dimension(923, 122));
        filterPanel.setOpaque(false);
        filterPanel.setPreferredSize(new java.awt.Dimension(923, 122));

        lblCuisineFilter.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblCuisineFilter.setText("Cuisine:");

        cbxCuisine.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxCuisine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cbxCuisine.setToolTipText("A style of cooking characterized by distinctive ingredients, techniques and dishes, and usually associated with a specific culture or geographic region.");
        cbxCuisine.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxCuisine.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxCuisine.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxCuisine.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCuisineItemStateChanged(evt);
            }
        });

        lblLocation.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblLocation.setText("Location:");

        cbxLocation.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cbxLocation.setToolTipText("A style of cooking characterized by distinctive ingredients, techniques and dishes, and usually associated with a specific culture or geographic region.");
        cbxLocation.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxLocation.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxLocation.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxLocation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxLocationItemStateChanged(evt);
            }
        });

        lblService.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblService.setText("Service:");

        cbxService.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxService.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Delivery", "Take Away", "Dine-in" }));
        cbxService.setToolTipText("A style of cooking characterized by distinctive ingredients, techniques and dishes, and usually associated with a specific culture or geographic region.");
        cbxService.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxService.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxService.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxService.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxServiceItemStateChanged(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSearch.setMaximumSize(new java.awt.Dimension(105, 25));
        txtSearch.setMinimumSize(new java.awt.Dimension(105, 25));
        txtSearch.setPreferredSize(new java.awt.Dimension(105, 25));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        lblSearch.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblSearch.setText("Search:");

        lblReviewRating.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblReviewRating.setText("Review Ratings:");

        cbxReviewRating.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxReviewRating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "5", "4", "3", "2", "1" }));
        cbxReviewRating.setToolTipText("A style of cooking characterized by distinctive ingredients, techniques and dishes, and usually associated with a specific culture or geographic region.");
        cbxReviewRating.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxReviewRating.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxReviewRating.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxReviewRating.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxReviewRatingItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout filterPanelLayout = new javax.swing.GroupLayout(filterPanel);
        filterPanel.setLayout(filterPanelLayout);
        filterPanelLayout.setHorizontalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(filterPanelLayout.createSequentialGroup()
                        .addComponent(lblCuisineFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCuisine, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblService)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxService, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblReviewRating)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxReviewRating, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        filterPanelLayout.setVerticalGroup(
            filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPanelLayout.createSequentialGroup()
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblService)
                        .addComponent(cbxService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblReviewRating)
                        .addComponent(cbxReviewRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxCuisine, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCuisineFilter)
                        .addComponent(lblLocation)))
                .addGap(18, 18, 18)
                .addGroup(filterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        vendorPanel.add(filterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 910, 90));

        lblWelcomeMsg.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lblWelcomeMsg.setText("Welcome to Food Mart!");
        vendorPanel.add(lblWelcomeMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 410, -1));

        vendorTable.setModel(model);
        vendorTable.setMaximumSize(new java.awt.Dimension(700, 350));
        vendorTable.setMinimumSize(new java.awt.Dimension(700, 350));
        vendorTable.setPreferredSize(new java.awt.Dimension(700, 350));
        vendorTable.setRowHeight(50);
        vendorTable.setShowGrid(true);
        vendorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vendorTableMouseReleased(evt);
            }
        });
        scrollVendorTable.setViewportView(vendorTable);
        if (vendorTable.getColumnModel().getColumnCount() > 0) {
            vendorTable.getColumnModel().getColumn(0).setResizable(false);
            vendorTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            vendorTable.getColumnModel().getColumn(5).setResizable(false);
            vendorTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        vendorPanel.add(scrollVendorTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 600, 420));

        vendorInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        vendorInfoPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lblVendorName.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblVendorName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVendorName.setText("Select a Restaurant!");

        lblReviews.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblReviews.setText("Reviews:");

        lblVendorReviews.setEditable(false);
        lblVendorReviews.setBackground(new java.awt.Color(255, 255, 255));
        lblVendorReviews.setColumns(20);
        lblVendorReviews.setFont(new java.awt.Font("Dubai Light", 0, 14)); // NOI18N
        lblVendorReviews.setLineWrap(true);
        lblVendorReviews.setRows(1);
        lblVendorReviews.setTabSize(4);
        lblVendorReviews.setText("Select a rastaurant from the table to know more!");
        lblVendorReviews.setWrapStyleWord(true);
        lblVendorReviews.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblVendorReviews.setMargin(new java.awt.Insets(3, 6, 3, 6));
        scrollVendorReviews.setViewportView(lblVendorReviews);

        btnViewStore.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnViewStore.setText("View Menu");
        btnViewStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewStoreActionPerformed(evt);
            }
        });

        lblVendorLocationLabel.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblVendorLocationLabel.setText("Location:");

        lblVendorServicesLabel.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblVendorServicesLabel.setText("Services:");

        lblVendorLocation.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N

        lblVendorServices.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N

        javax.swing.GroupLayout vendorInfoPanelLayout = new javax.swing.GroupLayout(vendorInfoPanel);
        vendorInfoPanel.setLayout(vendorInfoPanelLayout);
        vendorInfoPanelLayout.setHorizontalGroup(
            vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendorInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollVendorReviews)
                    .addGroup(vendorInfoPanelLayout.createSequentialGroup()
                        .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(vendorInfoPanelLayout.createSequentialGroup()
                                .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVendorLocationLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblVendorServicesLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVendorLocation)
                                    .addComponent(lblVendorServices)))
                            .addComponent(lblReviews))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vendorInfoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewStore, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addComponent(lblVendorName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        vendorInfoPanelLayout.setVerticalGroup(
            vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vendorInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblVendorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVendorLocationLabel)
                    .addComponent(lblVendorLocation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(vendorInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVendorServicesLabel)
                    .addComponent(lblVendorServices))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblReviews)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollVendorReviews, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewStore, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        vendorPanel.add(vendorInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 270, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vendorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vendorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxCuisineItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCuisineItemStateChanged
        applyFilters(sorter);
    }//GEN-LAST:event_cbxCuisineItemStateChanged

    private void cbxLocationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxLocationItemStateChanged
        applyFilters(sorter);
    }//GEN-LAST:event_cbxLocationItemStateChanged

    private void cbxServiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxServiceItemStateChanged
        applyFilters(sorter);
    }//GEN-LAST:event_cbxServiceItemStateChanged

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        applyFilters(sorter);
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnViewStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewStoreActionPerformed
        Panel.Customer.MainPanel mainPanel = (Panel.Customer.MainPanel) this.getParent();
        int row = vendorTable.getSelectedRow();
        if (row >= 0) {
            String vendorID = (String) vendorTable.getValueAt(row,0);
            Vendor vendor = (Vendor) new Vendor(vendorID).getUser(false);
            mainPanel.displayVendorMenu(vendor, customer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a restaurant in the table to view their menu.");
        }
    }//GEN-LAST:event_btnViewStoreActionPerformed

    private void cbxReviewRatingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxReviewRatingItemStateChanged
        int row = vendorTable.getSelectedRow();
        if (row >= 0) {
            String vendorID = (String) vendorTable.getValueAt(row, 0);
            Vendor vendor = (Vendor) new Vendor(vendorID).getUser(false);
            displayVendorReviews(vendor, cbxReviewRating.getSelectedItem().toString());
        }
    }//GEN-LAST:event_cbxReviewRatingItemStateChanged

    private void vendorTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vendorTableMouseReleased
        int row = vendorTable.getSelectedRow();
        if (row >= 0) {
            String vendorID = String.valueOf(vendorTable.getValueAt(row, 0));
            Vendor vendor = (Vendor) new Vendor(vendorID).getUser(false);
            lblVendorName.setText(vendor.getName());
            lblVendorLocation.setText(vendor.getLocation());
            lblVendorServices.setText(vendor.getServices());
            displayVendorReviews(vendor, cbxReviewRating.getSelectedItem().toString());
        }
    }//GEN-LAST:event_vendorTableMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnViewStore;
    private javax.swing.JComboBox<String> cbxCuisine;
    private javax.swing.JComboBox<String> cbxLocation;
    private javax.swing.JComboBox<String> cbxReviewRating;
    private javax.swing.JComboBox<String> cbxService;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblCuisineFilter;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblReviewRating;
    private javax.swing.JLabel lblReviews;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblService;
    private javax.swing.JLabel lblVendorLocation;
    private javax.swing.JLabel lblVendorLocationLabel;
    private javax.swing.JLabel lblVendorName;
    private javax.swing.JTextArea lblVendorReviews;
    private javax.swing.JLabel lblVendorServices;
    private javax.swing.JLabel lblVendorServicesLabel;
    private javax.swing.JLabel lblWelcomeMsg;
    private javax.swing.JScrollPane scrollVendorReviews;
    private javax.swing.JScrollPane scrollVendorTable;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JPanel vendorInfoPanel;
    private javax.swing.JPanel vendorPanel;
    private javax.swing.JTable vendorTable;
    // End of variables declaration//GEN-END:variables
}
