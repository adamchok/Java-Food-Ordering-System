package Panel.Customer;

import Order.Foodcart;
import User.Customer;
import User.Vendor;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;  
import JSwingObjects.JTablesAndCombobox;
import FoodItem.FoodItem;
import Order.Order;

/**
 *
 * @author CHOK QI YANG TP070091
 */
public class ViewMenuPanel extends javax.swing.JPanel implements JTablesAndCombobox{
    private final DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column){  
            return false;  
        }
    };
    private final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    private final DefaultListModel<String> listModel = new DefaultListModel<>();
    private final String[] menuTableColumns = {"ID", "Item", "Price", "Item Type"};
    
    private Foodcart foodCart;
    private Vendor vendor;
    private Customer customer;
    private Order order;
    
    private double serviceFee = 0;
    
    public ViewMenuPanel() {
        initComponents();
        model.setColumnIdentifiers(menuTableColumns);
        menuTable.setModel(model);
        menuTable.setRowSorter(sorter);
        listFoodItems.setModel(listModel);
        
        foodCart = new Foodcart();
    }
    
    public void displayMenu(Vendor vendor, Customer customer) {
        foodCart = new Foodcart();
        this.vendor = vendor;
        this.customer = customer;
        displayVendorInfo();
        displayMenu();
    }
    
    private void displayVendorInfo() {
        cbxService.removeAllItems();
        lblViewVendorName.setText("");
        txtRestaurantAddress.setText("");
        
        lblViewVendorName.setText(vendor.getName());
        txtRestaurantAddress.setText(vendor.getRestaurantAddress());
        txtRestaurantAddress.setCaretPosition(0);
        String[] serviceList = vendor.getServices().split(", ");
        
        for (String service : serviceList) {
            if (service!= null) {
                addItemToComboBox(cbxService, service);
            }
        }
    }
    
    private void displayMenu() {
        model.setRowCount(0);
        listModel.clear();
        lblPrice.setText("RM 0");
        lblItemCount.setText("0");
        lblItemName.setText("");
        updateTotalCost();
        
        FoodItem menu = new FoodItem(vendor);
        ArrayList<FoodItem> itemList = menu.getMenu(false);
        if (!itemList.isEmpty()) {
            for (FoodItem item: itemList) {
                addItemToComboBox(cbxItemType, item.getItemType());
                String itemCost = String.format("%.2f", item.getItemPrice());
                String[] tableData = {item.getItemID(), item.getItemName(), itemCost, item.getItemType()};
                model.addRow(tableData);
            }
        }
    }
    
    @Override
    public boolean comboboxFilterImplementation(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
        String itemTypeFilter = cbxItemType.getSelectedItem().toString();
        String searchFilter = txtSearchItem.getText();
        
        String itemTypeItem = entry.getStringValue(3);
        String nameItem = entry.getStringValue(1);

        boolean itemType = "All".equals(itemTypeFilter) || itemTypeItem.equals(itemTypeFilter);
        boolean name = searchFilter.isEmpty() || searchFilter.isBlank() || nameItem.contains(searchFilter);

        return itemType && name; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuFilterPanel = new javax.swing.JPanel();
        txtSearchItem = new javax.swing.JTextField();
        lblSearchItem = new javax.swing.JLabel();
        lblItemType = new javax.swing.JLabel();
        cbxItemType = new javax.swing.JComboBox<>();
        scrollMenuTable = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        foodcartPanel = new javax.swing.JPanel();
        scrollFoodItems = new javax.swing.JScrollPane();
        listFoodItems = new javax.swing.JList<>();
        lblFoodItemsList = new javax.swing.JLabel();
        lblSelectServiceType = new javax.swing.JLabel();
        lblFoodCart = new javax.swing.JLabel();
        lblTotalCost = new javax.swing.JLabel();
        btnCheckout = new javax.swing.JButton();
        lblServiceCost = new javax.swing.JLabel();
        cbxService = new javax.swing.JComboBox<>();
        lblServicePrice = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        itemPanel = new javax.swing.JPanel();
        lblItemName = new javax.swing.JLabel();
        btnIncrease = new javax.swing.JButton();
        btnDecrease = new javax.swing.JButton();
        lblPrice = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        lblItemPrice = new javax.swing.JLabel();
        lblItemCount = new javax.swing.JLabel();
        scrollRestaurantAddress = new javax.swing.JScrollPane();
        txtRestaurantAddress = new javax.swing.JTextArea();
        lblViewVendorName = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(900, 580));
        setMinimumSize(new java.awt.Dimension(900, 580));
        setPreferredSize(new java.awt.Dimension(900, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuFilterPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuFilterPanel.setMaximumSize(new java.awt.Dimension(923, 122));
        menuFilterPanel.setMinimumSize(new java.awt.Dimension(923, 122));
        menuFilterPanel.setOpaque(false);
        menuFilterPanel.setPreferredSize(new java.awt.Dimension(923, 122));

        txtSearchItem.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        txtSearchItem.setMaximumSize(new java.awt.Dimension(105, 25));
        txtSearchItem.setMinimumSize(new java.awt.Dimension(105, 25));
        txtSearchItem.setPreferredSize(new java.awt.Dimension(105, 25));
        txtSearchItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchItemKeyTyped(evt);
            }
        });

        lblSearchItem.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblSearchItem.setText("Search Item:");

        lblItemType.setFont(new java.awt.Font("Dubai Light", 0, 20)); // NOI18N
        lblItemType.setText("Item Type:");

        cbxItemType.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxItemType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cbxItemType.setToolTipText("");
        cbxItemType.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxItemType.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxItemType.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxItemType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxItemTypeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout menuFilterPanelLayout = new javax.swing.GroupLayout(menuFilterPanel);
        menuFilterPanel.setLayout(menuFilterPanelLayout);
        menuFilterPanelLayout.setHorizontalGroup(
            menuFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuFilterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblItemType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxItemType, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(327, Short.MAX_VALUE))
        );
        menuFilterPanelLayout.setVerticalGroup(
            menuFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuFilterPanelLayout.createSequentialGroup()
                .addGroup(menuFilterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchItem)
                    .addComponent(txtSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItemType)
                    .addComponent(cbxItemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 86, Short.MAX_VALUE))
        );

        add(menuFilterPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 59, 610, 40));

        menuTable.setModel(model);
        menuTable.setMaximumSize(new java.awt.Dimension(700, 350));
        menuTable.setMinimumSize(new java.awt.Dimension(700, 350));
        menuTable.setPreferredSize(new java.awt.Dimension(700, 350));
        menuTable.setRowHeight(50);
        menuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTableMouseReleased(evt);
            }
        });
        scrollMenuTable.setViewportView(menuTable);
        if (menuTable.getColumnModel().getColumnCount() > 0) {
            menuTable.getColumnModel().getColumn(0).setMinWidth(50);
            menuTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            menuTable.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        add(scrollMenuTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 590, 340));

        foodcartPanel.setBackground(new java.awt.Color(255, 255, 255));
        foodcartPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        listFoodItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listFoodItemsMouseClicked(evt);
            }
        });
        scrollFoodItems.setViewportView(listFoodItems);

        lblFoodItemsList.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblFoodItemsList.setText("Food Items List:");

        lblSelectServiceType.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblSelectServiceType.setText("Select a service type:");

        lblFoodCart.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblFoodCart.setText("Food Cart:");

        lblTotalCost.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        lblTotalCost.setText("Total Order Cost:");

        btnCheckout.setText("Checkout");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        lblServiceCost.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblServiceCost.setText("Service Cost:");

        cbxService.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        cbxService.setToolTipText("");
        cbxService.setMaximumSize(new java.awt.Dimension(105, 25));
        cbxService.setMinimumSize(new java.awt.Dimension(105, 25));
        cbxService.setPreferredSize(new java.awt.Dimension(105, 25));
        cbxService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServiceActionPerformed(evt);
            }
        });

        lblServicePrice.setFont(new java.awt.Font("Dubai Light", 0, 16)); // NOI18N
        lblServicePrice.setText("RM 0");

        lblTotalPrice.setFont(new java.awt.Font("Dubai Light", 1, 16)); // NOI18N
        lblTotalPrice.setText("RM 0");

        javax.swing.GroupLayout foodcartPanelLayout = new javax.swing.GroupLayout(foodcartPanel);
        foodcartPanel.setLayout(foodcartPanelLayout);
        foodcartPanelLayout.setHorizontalGroup(
            foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodcartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollFoodItems, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblFoodCart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(foodcartPanelLayout.createSequentialGroup()
                        .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblServiceCost)
                            .addComponent(lblSelectServiceType)
                            .addComponent(lblTotalCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxService, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(foodcartPanelLayout.createSequentialGroup()
                                .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblServicePrice)
                                    .addComponent(lblTotalPrice))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(foodcartPanelLayout.createSequentialGroup()
                        .addComponent(lblFoodItemsList)
                        .addGap(0, 151, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(foodcartPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        foodcartPanelLayout.setVerticalGroup(
            foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodcartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoodCart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFoodItemsList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollFoodItems, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectServiceType)
                    .addComponent(cbxService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServiceCost)
                    .addComponent(lblServicePrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(foodcartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalCost)
                    .addComponent(lblTotalPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        add(foodcartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 270, 490));

        itemPanel.setBackground(new java.awt.Color(255, 255, 255));
        itemPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        itemPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblItemName.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        lblItemName.setText("IT-2: Chicken Kebab");
        itemPanel.add(lblItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 8, 571, -1));

        btnIncrease.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 18)); // NOI18N
        btnIncrease.setText("+");
        btnIncrease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncreaseActionPerformed(evt);
            }
        });
        itemPanel.add(btnIncrease, new org.netbeans.lib.awtextra.AbsoluteConstraints(521, 40, 50, -1));

        btnDecrease.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 18)); // NOI18N
        btnDecrease.setText("-");
        btnDecrease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecreaseActionPerformed(evt);
            }
        });
        itemPanel.add(btnDecrease, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 50, -1));

        lblPrice.setFont(new java.awt.Font("Dubai Light", 0, 24)); // NOI18N
        lblPrice.setText("RM 0");
        itemPanel.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 40, -1, -1));

        btnAddToCart.setText("Add to Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        itemPanel.add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 170, 32));

        lblItemPrice.setFont(new java.awt.Font("Dubai Light", 0, 24)); // NOI18N
        lblItemPrice.setText("Item Price:");
        itemPanel.add(lblItemPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 40, -1, -1));

        lblItemCount.setFont(new java.awt.Font("Dubai Light", 1, 18)); // NOI18N
        lblItemCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItemCount.setText("0");
        itemPanel.add(lblItemCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 70, -1));

        add(itemPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 590, 120));

        txtRestaurantAddress.setEditable(false);
        txtRestaurantAddress.setBackground(new java.awt.Color(255, 255, 255));
        txtRestaurantAddress.setColumns(20);
        txtRestaurantAddress.setFont(new java.awt.Font("Dubai Light", 0, 12)); // NOI18N
        txtRestaurantAddress.setLineWrap(true);
        txtRestaurantAddress.setTabSize(4);
        txtRestaurantAddress.setWrapStyleWord(true);
        txtRestaurantAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtRestaurantAddress.setMargin(new java.awt.Insets(0, 0, 0, 0));
        scrollRestaurantAddress.setViewportView(txtRestaurantAddress);

        add(scrollRestaurantAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 270, 60));

        lblViewVendorName.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lblViewVendorName.setText("{Insert Vendor Name}");
        add(lblViewVendorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 380, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchItemKeyTyped
        applyFilters(sorter);
    }//GEN-LAST:event_txtSearchItemKeyTyped

    public void updateTotalCost() {
        lblTotalPrice.setText("RM "+String.format("%.2f", foodCart.getTotalCost()+serviceFee));
    }
    
    public void updateFoodCart() {
        listModel.clear();
        for (int i = 0; i < foodCart.getFoodItems().size(); i++) {
            String updateListWith = "Item ID: "+foodCart.getFoodItems().get(i).getItemID()
                    +" - "+foodCart.getFoodItems().get(i).getItemName()+" (x"+foodCart.getFoodItemCounts().get(i)
                    +") - RM "+String.format("%.2f", foodCart.getFoodItems().get(i).getItemPrice() * foodCart.getFoodItemCounts().get(i));
            if (!listModel.contains(updateListWith)) {
                listModel.addElement(updateListWith);
            }
        }
        updateTotalCost();
    }
    
    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        int foodItemCount = Integer.parseInt(lblItemCount.getText());
        if (foodItemCount != 0 && menuTable.getSelectedRow() >= 0) {
            String foodItemID= menuTable.getValueAt(menuTable.getSelectedRow(), 0).toString();
            
            FoodItem foodItem = (FoodItem) new FoodItem(foodItemID).getObject("Item Details");
            
            foodCart.addItem(foodItem, foodItemCount);
            updateFoodCart();
        }
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void cbxItemTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxItemTypeItemStateChanged
        applyFilters(sorter);
    }//GEN-LAST:event_cbxItemTypeItemStateChanged

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
        String serviceType = cbxService.getSelectedItem().toString();
        MainPanel mainPanel = (MainPanel) this.getParent();
        
        boolean checkExistingOrder = mainPanel.checkCurrentOrder(serviceType, customer);
        
        if (!foodCart.getFoodItems().isEmpty()) {
            if (checkExistingOrder == false) {
                mainPanel.displayConfirmOrder(foodCart, serviceType, vendor, customer);
            } else {
                JOptionPane.showMessageDialog(this, "You already placed an order.\nOnce your current order is completed, you may place another one.");
            }
        }
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void btnDecreaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecreaseActionPerformed
        int currentItemCount = Integer.parseInt(lblItemCount.getText());
        if (currentItemCount > 0) {
            currentItemCount--;
            lblItemCount.setText(Integer.toString(currentItemCount));
        }
    }//GEN-LAST:event_btnDecreaseActionPerformed

    private void btnIncreaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncreaseActionPerformed
        int currentItemCount = Integer.parseInt(lblItemCount.getText());
        currentItemCount++;
        lblItemCount.setText(Integer.toString(currentItemCount));
        
    }//GEN-LAST:event_btnIncreaseActionPerformed

    private void listFoodItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFoodItemsMouseClicked
        if (evt.getClickCount() == 2) {
            int selectedIndex = listFoodItems.getSelectedIndex();
            if (selectedIndex != -1) {
                foodCart.removeItem(selectedIndex);
                listModel.remove(selectedIndex);
            }
            updateTotalCost();
        }
    }//GEN-LAST:event_listFoodItemsMouseClicked

    private void cbxServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServiceActionPerformed
        if (cbxService.getSelectedIndex() >= 0) {
            if (cbxService.getSelectedItem().equals("Delivery")) {
                serviceFee = 5.0;
            } else {
                serviceFee = 0.0;
            }
            lblServicePrice.setText("RM "+String.format("%.2f", serviceFee));
            if (!foodCart.getFoodItems().isEmpty()) {
                updateTotalCost();
            }
        }
    }//GEN-LAST:event_cbxServiceActionPerformed

    private void menuTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTableMouseReleased
        int selectedIndex = menuTable.getSelectedRow();
        
        if (selectedIndex >= 0) {
            String itemName = menuTable.getValueAt(selectedIndex, 1).toString();
            String itemNumber = menuTable.getValueAt(selectedIndex, 0).toString();
            double itemPrice = Double.parseDouble(menuTable.getValueAt(selectedIndex, 2).toString());
            String itemPriceFormatted = String.format("%.2f",itemPrice);
            
            lblItemName.setText(itemNumber+": "+itemName);
            lblPrice.setText("RM "+itemPriceFormatted);
            lblItemCount.setText("0");
        }
    }//GEN-LAST:event_menuTableMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnDecrease;
    private javax.swing.JButton btnIncrease;
    private javax.swing.JComboBox<String> cbxItemType;
    private javax.swing.JComboBox<String> cbxService;
    private javax.swing.JPanel foodcartPanel;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JLabel lblFoodCart;
    private javax.swing.JLabel lblFoodItemsList;
    private javax.swing.JLabel lblItemCount;
    private javax.swing.JLabel lblItemName;
    private javax.swing.JLabel lblItemPrice;
    private javax.swing.JLabel lblItemType;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSearchItem;
    private javax.swing.JLabel lblSelectServiceType;
    private javax.swing.JLabel lblServiceCost;
    private javax.swing.JLabel lblServicePrice;
    private javax.swing.JLabel lblTotalCost;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JLabel lblViewVendorName;
    private javax.swing.JList<String> listFoodItems;
    private javax.swing.JPanel menuFilterPanel;
    private javax.swing.JTable menuTable;
    private javax.swing.JScrollPane scrollFoodItems;
    private javax.swing.JScrollPane scrollMenuTable;
    private javax.swing.JScrollPane scrollRestaurantAddress;
    private javax.swing.JTextArea txtRestaurantAddress;
    private javax.swing.JTextField txtSearchItem;
    // End of variables declaration//GEN-END:variables
}
